<discard-button>
  <button class="discard-btn">Discard</button>
</discard-button>

<script>
  import { $deckId } from '../utils/deckStores.js'
  import { $handLimit, $currentHand } from '../utils/hand.js'

  class DiscardButton extends HTMLElement {
    constructor() {
      super()

      const button = this.querySelector('button.discard-btn')

      // probably going to have to make a card at hand stores to store the hand obj too
      // make it so that the button can see which card checkbox is being ticked
      // delete each card that's ticked and get it's length
      // then draw again by it's length - hand limit
      button.addEventListener('click', () => {
        // let count = document.querySelector('div.hand-card-container').childElementCount
        // console.log(count)

        let cards = []
        let ticked = document.getElementsByClassName('card-checkbox')
        // let ticked = document.querySelectorAll('input.card-checkbox:checked').length
        console.log(ticked)
        for(let i = 0; ticked[i]; i++) {
          if(ticked[i].checked) {
            cards.push(ticked[i].value)
            // for some reason the remove() will make the loop stops so we can't discard multiple card at the same time
            ticked[i].parentElement.remove()
            // ticked[i].parentElement.hidden()
          }
        }
        // see what kind of obj ticked is?
        // ticked.forEach(box => {
        //   if(box.checked) {
        //     cards.push(box.value)
        //     box.parentElement.remove()
        //   }
        // })
        console.log(cards)
      })
    }
  }

  customElements.define('discard-button', DiscardButton)
</script>
